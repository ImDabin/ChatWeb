{"ast":null,"code":"var _jsxFileName = \"/Users/imdabin/Node/ChatApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport socket from \"./server\";\nimport InputField from \"./components/InputField/InputField\";\nimport MessageContainer from \"./components/MessageContainer/MessageContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null); // React state로 관리\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  console.log(\"message List\", messageList);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessageList(prevState => prevState.concat(message));\n    });\n    askUserName();\n  }, []);\n  const askUserName = () => {\n    const userName = prompt(\"당신의 이름을 입력하세요\");\n    console.log(\"User name:\", userName);\n    socket.emit('login', userName, res => {\n      if (res.ok) {\n        setUser(res.data); // setUser를 통해 상태를 업데이트\n      } else {\n        console.log('Login error:', res.error);\n      }\n    });\n  };\n  const sendMessage = event => {\n    event.preventDefault();\n    socket.emit(\"sendMessage\", message, res => {\n      console.log(\"sendMessage res\", res);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(MessageContainer, {\n        messageList: messageList,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qng1E45kbkJIs2NAmf6pY4N8zxw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","socket","InputField","MessageContainer","jsxDEV","_jsxDEV","App","_s","user","setUser","message","setMessage","messageList","setMessageList","console","log","on","prevState","concat","askUserName","userName","prompt","emit","res","ok","data","error","sendMessage","event","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/imdabin/Node/ChatApp/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport socket from \"./server\";\nimport InputField from \"./components/InputField/InputField\";\nimport MessageContainer from \"./components/MessageContainer/MessageContainer\";\n\nfunction App() {\n  const [user, setUser] = useState(null); // React state로 관리\n  const [message, setMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n\n  console.log(\"message List\", messageList);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessageList((prevState) => prevState.concat(message));\n    });\n\n    askUserName();\n  }, []);\n\n  const askUserName = () => {\n    const userName = prompt(\"당신의 이름을 입력하세요\");\n    console.log(\"User name:\", userName);\n\n    socket.emit('login', userName, (res) => {\n      if (res.ok) {\n        setUser(res.data); // setUser를 통해 상태를 업데이트\n      } else {\n        console.log('Login error:', res.error);\n      }\n    });\n  };\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    socket.emit(\"sendMessage\", message, (res) => {\n      console.log(\"sendMessage res\", res);\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"App\">\n        <MessageContainer messageList={messageList} user={user} />\n        <InputField\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,gBAAgB,MAAM,gDAAgD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElDc,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,WAAW,CAAC;EAExCb,SAAS,CAAC,MAAM;IACdE,MAAM,CAACe,EAAE,CAAC,SAAS,EAAGN,OAAO,IAAK;MAChCG,cAAc,CAAEI,SAAS,IAAKA,SAAS,CAACC,MAAM,CAACR,OAAO,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEFS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGC,MAAM,CAAC,eAAe,CAAC;IACxCP,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEK,QAAQ,CAAC;IAEnCnB,MAAM,CAACqB,IAAI,CAAC,OAAO,EAAEF,QAAQ,EAAGG,GAAG,IAAK;MACtC,IAAIA,GAAG,CAACC,EAAE,EAAE;QACVf,OAAO,CAACc,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLX,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEQ,GAAG,CAACG,KAAK,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB5B,MAAM,CAACqB,IAAI,CAAC,aAAa,EAAEZ,OAAO,EAAGa,GAAG,IAAK;MAC3CT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEQ,GAAG,CAAC;IACrC,CAAC,CAAC;EACJ,CAAC;EAED,oBACElB,OAAA;IAAAyB,QAAA,eACEzB,OAAA;MAAK0B,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBzB,OAAA,CAACF,gBAAgB;QAACS,WAAW,EAAEA,WAAY;QAACJ,IAAI,EAAEA;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1D9B,OAAA,CAACH,UAAU;QACTQ,OAAO,EAAEA,OAAQ;QACjBC,UAAU,EAAEA,UAAW;QACvBgB,WAAW,EAAEA;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC5B,EAAA,CA/CQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}